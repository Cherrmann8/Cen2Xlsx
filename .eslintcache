[{"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\index.js":"1","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\App.js":"2","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppFooter.js":"4","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppHeader.js":"5","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppSection.js":"6","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppNav.js":"7","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LoadingPage\\LoadingPage.js":"8","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\LocationPage.js":"9","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\IndicatorPage.js":"10","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\GraphPage\\GraphPage.js":"11","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\ConfirmationPage\\ConfirmationPage.js":"12","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\LocationLevelButtons.js":"13","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectorTable.js":"14","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectionTable.js":"15","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\CheckBoxLabel.js":"16","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\SectionAccordion.js":"17"},{"size":449,"mtime":1616093647498,"results":"18","hashOfConfig":"19"},{"size":3133,"mtime":1617221962440,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1616095002193,"results":"21","hashOfConfig":"19"},{"size":1528,"mtime":1617220225229,"results":"22","hashOfConfig":"19"},{"size":529,"mtime":1614807223692,"results":"23","hashOfConfig":"19"},{"size":7193,"mtime":1617222920591,"results":"24","hashOfConfig":"19"},{"size":717,"mtime":1617128770766,"results":"25","hashOfConfig":"19"},{"size":1049,"mtime":1617207921080,"results":"26","hashOfConfig":"19"},{"size":7635,"mtime":1617222954243,"results":"27","hashOfConfig":"19"},{"size":4808,"mtime":1617224164273,"results":"28","hashOfConfig":"19"},{"size":327,"mtime":1614807223806,"results":"29","hashOfConfig":"19"},{"size":5490,"mtime":1617221712373,"results":"30","hashOfConfig":"19"},{"size":1316,"mtime":1614807223889,"results":"31","hashOfConfig":"19"},{"size":8464,"mtime":1617211137301,"results":"32","hashOfConfig":"19"},{"size":2318,"mtime":1617031826142,"results":"33","hashOfConfig":"19"},{"size":929,"mtime":1617221051907,"results":"34","hashOfConfig":"19"},{"size":3454,"mtime":1617223433960,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"19hsamx",{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":2,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":8,"source":"50","usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":7,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":7,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"75","usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\index.js",[],["78","79","80","81","82","83"],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\App.js",["84","85","86","87","88"],"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AppHeader from \"./components/AppHeader\";\nimport AppSection from \"./components/AppSection\";\nimport AppFooter from \"./components/AppFooter\";\nimport IndicatorPage from \"./components/pages/IndicatorPage/IndicatorPage\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 0,\n    };\n\n    this.appSection = React.createRef();\n\n    this.incPage = this.incPage.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  componentDidMount() {\n    const navPage = document.getElementById(\"NavPage\");\n    navPage.addEventListener(\"animationend\", (e) => {\n      if (navPage.className === \"exitRight\") {\n        navPage.className = \"enterLeft\";\n        this.decPage();\n      } else if (navPage.className === \"exitLeft\") {\n        navPage.className = \"enterRight\";\n        this.incPage();\n      } else if (navPage.className === \"enterRight\") {\n        navPage.className += \"\";\n      } else if (navPage.className === \"enterLeft\") {\n        navPage.className += \"\";\n      }\n    });\n\n    const appSection = document.getElementById(\"AppSection\");\n    appSection.addEventListener(\"animationend\", (e) => {\n      if (appSection.className === \"exitRight\") {\n        appSection.className = \"enterLeft\";\n      } else if (appSection.className === \"exitLeft\") {\n        appSection.className = \"enterRight\";\n      } else if (appSection.className === \"enterRight\") {\n        appSection.className += \"\";\n      } else if (appSection.className === \"enterLeft\") {\n        appSection.className += \"\";\n      }\n    });\n  }\n\n  handlePageChange(increment) {\n    const { page } = this.state;\n\n    if (page + increment === 3) {\n      if (!this.appSection.current.confirmDownload()) {\n        return;\n      }\n    }\n\n    const navPage = document.getElementById(\"NavPage\");\n    const appSection = document.getElementById(\"AppSection\");\n\n    if (increment > 0) {\n      navPage.className = \"exitLeft\";\n      appSection.className = \"exitLeft\";\n    } else if (increment < 0) {\n      navPage.className = \"exitRight\";\n      appSection.className = \"exitRight\";\n    }\n  }\n\n  incPage() {\n    console.log(\"inc\")\n    const { page } = this.state;\n\n    if (page + 1 === 5) {\n      this.appSection.current.reset();\n      this.setState({ page: 0 });\n    } else {\n      this.setState({ page: page + 1 });\n    }\n  }\n\n  decPage() {\n    console.log(\"dec\")\n    const { page } = this.state;\n\n    if (page - 1 === -1) {\n      this.setState({ page: 0 });\n    } else {\n      this.setState({ page: page - 1 });\n    }\n  }\n\n  render() {\n    const { page } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <AppHeader page={page} />\n        </div>\n\n        <div className=\"App-section\">\n          <AppSection ref={this.appSection} page={page} onPageChange={this.handlePageChange} />\n        </div>\n\n        <div className=\"App-footer\">\n          <AppFooter page={page} onPageChange={this.handlePageChange} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppFooter.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppHeader.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppSection.js",["89","90","91","92","93","94","95","96","97","98","99","100"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LocationPage from \"./pages/LocationPage/LocationPage\";\r\nimport IndicatorPage from \"./pages/IndicatorPage/IndicatorPage\";\r\nimport ConfirmationPage from \"./pages/ConfirmationPage/ConfirmationPage\";\r\nimport LoadingPage from \"./pages/LoadingPage/LoadingPage\";\r\nimport GraphPage from \"./pages/GraphPage/GraphPage\";\r\nimport \"./css/AppSection.css\";\r\n\r\nconst electron = window.require(\"electron\");\r\nconst { ipcRenderer } = electron;\r\n\r\nclass AppSection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      locationList: [],\r\n      indicatorList: [],\r\n      fileName: \"\",\r\n      filePath: \"\",\r\n      progress: 0,\r\n      progressDialog: \"\",\r\n      invalidStatus: {\r\n        invalidLocations: false,\r\n        invalidIndicators: false,\r\n        invalidFileName: false,\r\n        invalidFilePath: false,\r\n      }\r\n    };\r\n\r\n    this.setFileName = this.setFileName.bind(this);\r\n    this.addLocation = this.addLocation.bind(this);\r\n    this.removeLocation = this.removeLocation.bind(this);\r\n    this.addIndicator = this.addIndicator.bind(this);\r\n    this.removeIndicator = this.removeIndicator.bind(this);\r\n    this.startPythonScript = this.startPythonScript.bind(this);\r\n\r\n    const { onPageChange } = this.props;\r\n    ipcRenderer.on(\"MESSAGE_FROM_BACKGROUND_VIA_MAIN\", (event, args) => {\r\n      const tmpMessage = args.split(\" \");\r\n      const newProgress = parseFloat(tmpMessage[tmpMessage.length - 1]) * 100;\r\n      const newDialog = tmpMessage.slice(0, tmpMessage.length - 1).join(\" \");\r\n\r\n      this.setState({ progress: newProgress, progressDialog: newDialog });\r\n      if (newProgress >= 100) {\r\n        onPageChange(1);\r\n      }\r\n    });\r\n\r\n    ipcRenderer.on(\"RETURN_DIALOG\", (event, args) => {\r\n      if (args.filePath && args.filePath.length > 0) {\r\n        this.setState({ filePath: args.filePath });\r\n      }\r\n    });\r\n\r\n    ipcRenderer.on(\"RETURN_DOWNLOADS_PATH\", (event, args) => {\r\n      this.setState({ filePath: args.downloadsPath });\r\n    });\r\n\r\n    ipcRenderer.send(\"GET_DOWNLOADS_PATH\");\r\n  }\r\n\r\n  setFileName(name) {\r\n    const { invalidStatus } = this.state;\r\n    this.setState({ fileName: name });\r\n    if (invalidStatus.invalidFileName) {\r\n      this.setState({\r\n        invalidStatus: {\r\n          invalidLocations: invalidStatus.invalidLocations,\r\n          invalidIndicators: invalidStatus.invalidIndicators,\r\n          invalidFileName: false,\r\n          invalidFilePath: invalidStatus.invalidFilePath,\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.setState({\r\n      locationList: [],\r\n      indicatorList: [],\r\n      fileName: \"\",\r\n      progress: 0,\r\n      progressDialog: \"\",\r\n      invalidStatus: {\r\n        invalidLocations: false,\r\n        invalidIndicators: false,\r\n        invalidFileName: false,\r\n        invalidFilePath: false,\r\n      }\r\n    });\r\n  }\r\n\r\n  addLocation(locationName, geographicLevel, primaryID, secondaryID) {\r\n    const { locationList } = this.state;\r\n    const idx = locationList.findIndex(\r\n      (i) => (\r\n        i.geographicLevel === geographicLevel\r\n        && i.primaryID === primaryID\r\n        && i.secondaryID === secondaryID\r\n      ),\r\n    );\r\n    if (idx === -1) {\r\n      locationList.push({\r\n        locationName,\r\n        geographicLevel,\r\n        primaryID,\r\n        secondaryID,\r\n      });\r\n      this.setState({ locationList });\r\n    }\r\n  }\r\n\r\n  removeLocation(locationIdx) {\r\n    const { locationList } = this.state;\r\n\r\n    if (locationList.length > locationIdx) {\r\n      locationList.splice(locationIdx, 1);\r\n      this.setState({ locationList });\r\n    }\r\n\r\n    console.log(\"appsection\");\r\n    console.log(locationList);\r\n  }\r\n\r\n  addIndicator(sectionIdx, tableIdx, tableName) {\r\n    const { indicatorList } = this.state;\r\n    const idx = indicatorList.findIndex(\r\n      (i) => i.sectionIdx === sectionIdx && i.tableIdx === tableIdx,\r\n    );\r\n    if (idx === -1) {\r\n      indicatorList.push({ tableName, sectionIdx, tableIdx });\r\n      this.setState({ indicatorList });\r\n    } else {\r\n      console.log(\"tried to add an indicator twice\");\r\n    }\r\n\r\n    console.log(indicatorList);\r\n  }\r\n\r\n  removeIndicator(sectionIdx, tableIdx) {\r\n    const { indicatorList } = this.state;\r\n    const idx = indicatorList.findIndex(\r\n      (i) => i.sectionIdx === sectionIdx && i.tableIdx === tableIdx,\r\n    );\r\n    if (idx !== -1) {\r\n      indicatorList.splice(idx, 1);\r\n      this.setState({ indicatorList });\r\n    }\r\n\r\n    console.log(indicatorList);\r\n  }\r\n\r\n  confirmDownload() {\r\n    const {\r\n      locationList,\r\n      indicatorList,\r\n      fileName,\r\n      filePath,\r\n      invalidStatus\r\n    } = this.state;\r\n\r\n    let invalidLoc = false;\r\n    let invalidInd = false;\r\n    let invalidName = false;\r\n    let invalidPath = false;\r\n\r\n    if (locationList.length === 0) {\r\n      invalidLoc = true;\r\n    }\r\n\r\n    if (indicatorList.length === 0) {\r\n      invalidInd = true;\r\n    }\r\n\r\n    if (fileName.length === 0) {\r\n      invalidName = true;\r\n    }\r\n\r\n    this.setState({ invalidStatus: {\r\n      invalidLocations: invalidLoc,\r\n      invalidIndicators: invalidInd,\r\n      invalidFileName: invalidName,\r\n      invalidFilePath: invalidPath,\r\n    } });\r\n\r\n    if (invalidLoc || invalidInd || invalidName || invalidPath) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  startPythonScript() {\r\n    const { locationList, indicatorList } = this.state;\r\n\r\n    // ipcRenderer.send(\"START_BACKGROUND_VIA_MAIN\", {\r\n    //   reportArea: locationList,\r\n    //   selectedIndicators: indicatorList,\r\n    // });\r\n\r\n    ipcRenderer.send(\"FAKE_BACKGROUND_VIA_MAIN\");\r\n  }\r\n\r\n  render() {\r\n    const { page } = this.props;\r\n    const {\r\n      locationList,\r\n      indicatorList,\r\n      fileName,\r\n      filePath,\r\n      progress,\r\n      progressDialog,\r\n      invalidStatus\r\n    } = this.state;\r\n\r\n    let section;\r\n    if (page === 0) {\r\n      section = (\r\n        <LocationPage\r\n          locationList={locationList}\r\n          onAddLocation={this.addLocation}\r\n          onRemoveLocation={this.removeLocation}\r\n        />\r\n      );\r\n    } else if (page === 1) {\r\n      section = (\r\n        <IndicatorPage\r\n          indicatorList={indicatorList}\r\n          onAddIndicator={this.addIndicator}\r\n          onRemoveIndicator={this.removeIndicator}\r\n        />\r\n      );\r\n    } else if (page === 2) {\r\n      section = (\r\n        <ConfirmationPage\r\n          locationList={locationList}\r\n          indicatorList={indicatorList}\r\n          fileName={fileName}\r\n          filePath={filePath}\r\n          invalidStatus={invalidStatus}\r\n          onFileNameChange={this.setFileName}\r\n        />\r\n      );\r\n    } else if (page === 3) {\r\n      section = (\r\n        <LoadingPage\r\n          progress={progress}\r\n          progressDialog={progressDialog}\r\n          onPageMount={this.startPythonScript}\r\n        />\r\n      );\r\n    } else if (page === 4) {\r\n      section = <GraphPage />;\r\n    }\r\n    return <div id=\"AppSection\">{section}</div>;\r\n  }\r\n}\r\n\r\nAppSection.propTypes = {\r\n  page: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\nAppSection.defaultProps = {\r\n  page: 0,\r\n  onPageChange: null,\r\n};\r\n\r\nexport default AppSection;\r\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppNav.js",["101"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport \"./css/AppNav.css\";\n\nfunction AppNav(props) {\n  const { page } = props;\n  let title;\n\n  if (page === 0) {\n    title = \"Select Report Area\";\n  } else if (page === 1) {\n    title = \"Select Report Indicators\";\n  } else if (page === 2) {\n    title = \"Confirm Report\";\n  } else if (page === 4) {\n    title = \"Download Graphs\";\n  }\n\n  return (\n    <div id=\"AppNav\">\n      <div id=\"AppNavHeader\">\n        <h4 id=\"NavPage\">\n          {title}\n        </h4>\n      </div>\n    </div>\n  );\n}\n\nAppNav.propTypes = {\n  page: PropTypes.number,\n};\nAppNav.defaultProps = {\n  page: 0,\n};\n\nexport default AppNav;\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LoadingPage\\LoadingPage.js",["102","103"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../../css/LoadingPage.css\";\r\n\r\nconst electron = window.require(\"electron\");\r\nconst { ipcRenderer } = electron;\r\n\r\nclass LoadingPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { onPageMount } = this.props;\r\n    onPageMount();\r\n  }\r\n\r\n  render() {\r\n    const { progress, progressDialog } = this.props;\r\n\r\n    return (\r\n      <div className=\"ProgressInfo\">\r\n        <ProgressBar now={progress} label={`${progress}%`} id=\"ProgressBar\" />\r\n        <span id=\"ProgressDialog\">{progressDialog}</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLoadingPage.propTypes = {\r\n  progress: PropTypes.number,\r\n  progressDialog: PropTypes.string,\r\n  onPageMount: PropTypes.func,\r\n};\r\nLoadingPage.defaultProps = {\r\n  progress: 0,\r\n  progressDialog: \"\",\r\n  onPageMount: null,\r\n};\r\n\r\nexport default LoadingPage;\r\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\LocationPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\IndicatorPage.js",["104","105","106","107","108","109","110"],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\GraphPage\\GraphPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\ConfirmationPage\\ConfirmationPage.js",["111","112","113"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Button from \"react-bootstrap/Button\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport \"../../css/ConfirmationPage.css\";\nimport { Col, Form, Row } from \"react-bootstrap\";\n\nconst electron = window.require(\"electron\");\nconst { ipcRenderer } = electron;\n\nclass ConfirmationPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    const { locationList, indicatorList } = this.props;\n    this.lList = [];\n    this.iList = [];\n\n    let itemID = 0;\n    locationList.forEach((location) => {\n      this.lList.push(\n        <ListGroup.Item action={false} eventKey={itemID} key={itemID}>\n          {location.locationName}\n        </ListGroup.Item>,\n      );\n      itemID += 1;\n    });\n\n    itemID = 0;\n    indicatorList.forEach((indicator) => {\n      this.iList.push(\n        <ListGroup.Item eventKey={itemID} key={itemID}>\n          {\n            indicator.tableName\n          }\n        </ListGroup.Item>,\n      );\n      itemID += 1;\n    });\n\n    this.dialog = this.dialog.bind(this);\n  }\n\n  onNameChange = (e) => {\n    const { onFileNameChange } = this.props;\n    onFileNameChange(e.target.value)\n  }\n\n  dialog() {\n    const { locationList } = this.props;\n    ipcRenderer.send(\"START_DIALOG\");\n  }\n\n  render() {\n    const { fileName, filePath, invalidStatus } = this.props;\n\n    return (\n      <div className=\"ConfirmationPage\">\n        <div className=\"ConfirmationTables\">\n          <Accordion id=\"locationConfTable\" defaultActiveKey=\"0\">\n            <Card>\n              <Card.Header id=\"ListHeader\">\n                <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\n                  Report Area\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body id=\"ConfirmationList\">\n                  <ListGroup variant=\"flush\" activeKey=\"-1\" id=\"ConfLocListGroup\">\n                    {this.lList}\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n          <Accordion id=\"indicatorConfTable\" defaultActiveKey=\"0\">\n            <Card>\n              <Card.Header id=\"ListHeader\">\n                <Accordion.Toggle as={Card.Header} variant=\"link\" eventKey=\"0\">\n                  Selected Tables\n                </Accordion.Toggle>\n              </Card.Header>\n              <Accordion.Collapse eventKey=\"0\">\n                <Card.Body id=\"ConfirmationList\">\n                  <ListGroup variant=\"flush\" activeKey=\"-1\">\n                    {this.iList}\n                  </ListGroup>\n                </Card.Body>\n              </Accordion.Collapse>\n            </Card>\n          </Accordion>\n        </div>\n        <Form id=\"ConfirmationForm\">\n          <Form.Group as={Row}>\n            <Form.Label column sm={1} htmlFor=\"fileName\">Name:</Form.Label>\n            <Col sm={11}>\n              <InputGroup hasValidation>\n                <FormControl\n                  required\n                  id=\"fileName\"\n                  placeholder=\"Enter a file name...\"\n                  onChange={this.onNameChange}\n                  isInvalid={invalidStatus.invalidFileName}\n                />\n                <InputGroup.Append>\n                  <InputGroup.Text>.xlsx</InputGroup.Text>\n                </InputGroup.Append>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please choose a file name\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Col>\n          </Form.Group>\n          <Form.Group as={Row}>\n            <Form.Label column sm={1} htmlFor=\"filePath\">Path:</Form.Label>\n            <Col sm={11}>\n              <InputGroup hasValidation>\n                <FormControl\n                  required\n                  id=\"filePath\"\n                  placeholder={filePath}\n                  value={filePath}\n                />\n                <InputGroup.Append>\n                  <Button onClick={this.dialog}>Choose...</Button>\n                </InputGroup.Append>\n                <Form.Control.Feedback type=\"invalid\">\n                  Please choose a file path\n                </Form.Control.Feedback>\n              </InputGroup>\n            </Col>\n          </Form.Group>\n        </Form>\n      </div>\n    );\n  }\n}\n\nConfirmationPage.propTypes = {\n  locationList: PropTypes.arrayOf(\n    PropTypes.shape({\n      locationName: PropTypes.string,\n      geographicLevel: PropTypes.string,\n      primaryID: PropTypes.string,\n      secondaryID: PropTypes.string,\n    }),\n  ),\n  indicatorList: PropTypes.arrayOf(\n    PropTypes.shape({\n      indicatorIdx: PropTypes.number,\n      sectionIdx: PropTypes.number,\n      tableIdx: PropTypes.number,\n    }),\n  ),\n  fileName: PropTypes.string,\n  filePath: PropTypes.string,\n  invalidStatus: PropTypes.shape({\n    invalidLocations: PropTypes.bool,\n    invalidIndicators: PropTypes.bool,\n    invalidFileName: PropTypes.bool,\n    invalidFilePath: PropTypes.bool,\n  }),\n  onFileNameChange: PropTypes.func,\n};\nConfirmationPage.defaultProps = {\n  locationList: null,\n  indicatorList: null,\n  fileName: \"\",\n  filePath: \"\",\n  invalidStatus: null,\n  onFileNameChange: null,\n};\n\nexport default ConfirmationPage;\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\LocationLevelButtons.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectorTable.js",["114","115","116","117","118","119","120","121","122"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass SelectorTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    // put each state name into the listgroup\n    this.primaryList = [];\n    this.filteredPrimaryList = [];\n    this.secondaryList = [];\n    this.filteredSecondaryList = [];\n    this.hideAll = true;\n    const { locations } = this.props;\n    let itemID = 0;\n    locations.forEach((location) => {\n      this.primaryList.push(\n        <ListGroup.Item\n          action\n          eventKey={itemID}\n          key={itemID}\n          onClick={(e) => this.onPrimaryListClick(e)}\n        >\n          {location.StateName}\n        </ListGroup.Item>\n      );\n      itemID += 1;\n    });\n    this.filteredPrimaryList = this.primaryList;\n\n    this.formFilter = React.createRef();\n\n    this.updateDimensions = this.updateDimensions.bind(this)\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n    this.handleResetClick = this.handleResetClick.bind(this);\n    this.onSecondayListClick = this.onSecondaryListClick.bind(this);\n    this.onPrimaryListClick = this.onPrimaryListClick.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this.updateDimensions());\n    this.updateDimensions();\n  }\n\n  componentDidUpdate() {\n    this.updateDimensions();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateDimensions());\n  }\n\n  handleFilterReset() {\n    this.formFilter.current.value = \"\";\n    this.filteredPrimaryList = this.primaryList;\n  }\n\n  handleFilterChange(event) {\n    const { activeList } = this.props;\n    const filter = event.target.value.toUpperCase();\n\n    if (activeList === \"0\") {\n      this.filteredPrimaryList = [];\n      this.primaryList.forEach((location) => {\n        const item = location.props.children.toUpperCase();\n        if (item.indexOf(filter) >= 0) {\n          this.filteredPrimaryList.push(location);\n        }\n      });\n    } else {\n      this.filteredSecondaryList = [];\n      this.secondaryList.forEach((location) => {\n        const item = location.props.children.toUpperCase();\n        if (item.indexOf(filter) >= 0) {\n          this.filteredSecondaryList.push(location);\n        }\n      });\n    }\n    this.forceUpdate();\n  }\n\n  handleResetClick() {\n    const { onCloseSecondary } = this.props;\n    this.handleFilterReset();\n    onCloseSecondary();\n  }\n\n  onSecondaryListClick(event) {\n    const { level, setCountyIdx, setPlaceIdx, onDoubleClick } = this.props;\n\n    const tmpSecondaryIdx = event.target.attributes[0].value;\n\n    if (level === \"County\") {\n      setCountyIdx(tmpSecondaryIdx);\n    } else if (level === \"Place\") {\n      setPlaceIdx(tmpSecondaryIdx);\n    }\n\n    if (event.detail === 2) {\n      onDoubleClick();\n    }\n  }\n\n  onPrimaryListClick(event) {\n    const tmpStateIdx = event.target.attributes[0].value;\n    const { level, onOpenSecondary, setStateIdx, onDoubleClick } = this.props;\n\n    // set the stateIdx\n    setStateIdx(tmpStateIdx);\n\n    if (level !== \"State\") {\n      const { locations } = this.props;\n\n      // change the primaryList title\n      onOpenSecondary(locations[tmpStateIdx].StateName);\n      this.handleFilterReset();\n\n      // create secondaryList\n      this.secondaryList = [];\n      let tmpSecondary = null;\n      let itemID = 0;\n      if (level === \"County\") {\n        tmpSecondary = locations[tmpStateIdx].Counties;\n        tmpSecondary.forEach((secondary) => {\n          this.secondaryList.push(\n            <ListGroup.Item\n              action\n              eventKey={itemID}\n              key={itemID}\n              onClick={(e) => this.onSecondaryListClick(e)}\n            >\n              {secondary.CountyName}\n            </ListGroup.Item>,\n          );\n          itemID += 1;\n        });\n      } else if (level === \"Place\") {\n        tmpSecondary = locations[tmpStateIdx].Places;\n        tmpSecondary.forEach((secondary) => {\n          this.secondaryList.push(\n            <ListGroup.Item\n              action\n              eventKey={itemID}\n              key={itemID}\n              onClick={(e) => this.onSecondaryListClick(e)}\n            >\n              {secondary.PlaceName}\n            </ListGroup.Item>,\n          );\n          itemID += 1;\n        });\n      }\n      this.filteredSecondaryList = this.secondaryList;\n    } else {\n      if (event.detail === 2) {\n        onDoubleClick();\n      }\n    }\n  }\n\n  updateDimensions() {\n    const { level } = this.props;\n    // console.log(\"---\")\n    const SelectorHeader = document.getElementById(\"SelectorAccordionHeader\").clientHeight;\n    // console.log(SelectorHeader);\n    // const SelectorBody = document.getElementById(\"SelectorList\").clientHeight;\n    // console.log(SelectorBody);\n\n    const SelectionHeader = document.getElementById(\"SelectionAccordionHeader\").clientHeight;\n    // console.log(SelectionHeader);\n    const SelectionBody = document.getElementById(\"SelectionList\").clientHeight;\n    // console.log(SelectionBody);\n\n    const targetHeight = (SelectionHeader + SelectionBody) - SelectorHeader;\n    // console.log(targetHeight);\n    document.getElementById(\"SelectorList\").style.height = `${targetHeight}px`;\n  }\n\n  render() {\n    // build the selectorTable\n    const {\n      level,\n      activeList,\n      primaryTitle,\n      secondaryTitle,\n      activePrimaryItem,\n      activeSecondaryItem,\n    } = this.props;\n\n    let resetStateButton = (\n      <Button id=\"ResetStateButton\" onClick={this.handleResetClick}>\n        Reset\n      </Button>\n    );\n\n    let listGroupItems;\n    let activeItem;\n    if (activeList === \"0\") {\n      listGroupItems = this.filteredPrimaryList;\n      activeItem = activePrimaryItem;\n    } else {\n      listGroupItems = this.filteredSecondaryList;\n      activeItem = activeSecondaryItem;\n    }\n\n    return (\n      <div id=\"SelectorTable\">\n        <Accordion defaultActiveKey=\"0\" activeKey=\"0\">\n          <Card>\n            <Card.Header id=\"SelectorAccordionHeader\">\n              <Accordion.Toggle as=\"h6\" eventKey=\"0\">\n                <div id=\"SelectorHeader\">\n                  <div id=\"SelectorPrimaryHeader\">\n                    {primaryTitle}\n                    {activeList !== \"0\" ? resetStateButton : null}\n                  </div>\n                  {activeList !== \"0\" ? secondaryTitle : null}\n                  <FormControl\n                    ref={this.formFilter}\n                    onKeyUp={(e) => this.handleFilterChange(e)}\n                    placeholder=\"filter...\"\n                  />\n                </div>\n              </Accordion.Toggle>\n            </Card.Header>\n            <Accordion.Collapse eventKey=\"0\">\n              <Card.Body id=\"SelectorList\">\n                <ListGroup variant=\"flush\" activeKey={activeItem}>\n                  {listGroupItems}\n                </ListGroup>\n              </Card.Body>\n            </Accordion.Collapse>\n          </Card>\n        </Accordion>\n      </div>\n    );\n  }\n}\n\nSelectorTable.propTypes = {\n  level: PropTypes.string,\n  activeList: PropTypes.string,\n  primaryTitle: PropTypes.string,\n  secondaryTitle: PropTypes.string,\n  onOpenSecondary: PropTypes.func,\n  onCloseSecondary: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  activePrimaryItem: PropTypes.string,\n  activeSecondaryItem: PropTypes.string,\n  setStateIdx: PropTypes.func,\n  setCountyIdx: PropTypes.func,\n  setPlaceIdx: PropTypes.func,\n  locations: PropTypes.arrayOf(\n    PropTypes.shape({\n      StateName: PropTypes.string,\n      StateID: PropTypes.string,\n      Counties: PropTypes.arrayOf(\n        PropTypes.shape({\n          CountyName: PropTypes.string,\n          CountyID: PropTypes.string,\n        }),\n      ),\n      Places: PropTypes.arrayOf(\n        PropTypes.shape({\n          PlaceName: PropTypes.string,\n          PlaceID: PropTypes.string,\n        }),\n      ),\n    }),\n  ),\n};\nSelectorTable.defaultProps = {\n  level: \"State\",\n  activeList: \"0\",\n  primaryTitle: \"Select a state\",\n  secondaryTitle: \"Select a state above\",\n  onOpenSecondary: null,\n  onCloseSecondary: null,\n  onDoubleClick: null,\n  activePrimaryItem: null,\n  activeSecondaryItem: null,\n  setStateIdx: null,\n  setCountyIdx: null,\n  setPlaceIdx: null,\n  locations: null,\n};\n\nexport default SelectorTable;\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectionTable.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\CheckBoxLabel.js",["123","124"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../../css/IndicatorPage.css\";\r\n\r\nclass CheckBoxLabel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { id, name, checked, onClick } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <label htmlFor={id}>\r\n          <input\r\n            type=\"checkbox\"\r\n            name={name}\r\n            id={id}\r\n            className=\"checkBoxLabel\"\r\n            checked={checked}\r\n            onChange={(e) => onClick(e)}\r\n          />\r\n          {name}\r\n        </label>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCheckBoxLabel.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\nCheckBoxLabel.defaultProps = {\r\n  id: null,\r\n  name: null,\r\n  checked: false,\r\n  onClick: null,\r\n};\r\n\r\nexport default CheckBoxLabel;\r\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\SectionAccordion.js",["125","126","127","128"],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":7,"column":8,"nodeType":"143","messageId":"144","endLine":7,"endColumn":21},{"ruleId":"141","severity":1,"message":"145","line":24,"column":47,"nodeType":"143","messageId":"144","endLine":24,"endColumn":48},{"ruleId":"141","severity":1,"message":"145","line":39,"column":50,"nodeType":"143","messageId":"144","endLine":39,"endColumn":51},{"ruleId":"146","severity":1,"message":"147","line":74,"column":23,"nodeType":"148","messageId":"149","endLine":75,"endColumn":1,"fix":"150"},{"ruleId":"146","severity":1,"message":"147","line":86,"column":23,"nodeType":"148","messageId":"149","endLine":87,"endColumn":1,"fix":"151"},{"ruleId":"152","severity":1,"message":"153","line":28,"column":8,"nodeType":"154","messageId":"155","endLine":29,"endColumn":1,"fix":"156"},{"ruleId":"152","severity":1,"message":"153","line":73,"column":10,"nodeType":"154","messageId":"155","endLine":74,"endColumn":1,"fix":"157"},{"ruleId":"152","severity":1,"message":"153","line":90,"column":8,"nodeType":"154","messageId":"155","endLine":91,"endColumn":1,"fix":"158"},{"ruleId":"141","severity":1,"message":"159","line":159,"column":7,"nodeType":"143","messageId":"144","endLine":159,"endColumn":15},{"ruleId":"141","severity":1,"message":"160","line":160,"column":7,"nodeType":"143","messageId":"144","endLine":160,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":160,"column":20,"nodeType":"154","messageId":"155","endLine":161,"endColumn":1,"fix":"161"},{"ruleId":"162","severity":1,"message":"163","line":166,"column":9,"nodeType":"143","messageId":"164","endLine":166,"endColumn":20,"fix":"165"},{"ruleId":"166","severity":1,"message":"167","line":180,"column":19,"nodeType":"168","messageId":"169","endLine":180,"endColumn":20,"fix":"170"},{"ruleId":"166","severity":1,"message":"171","line":185,"column":7,"nodeType":"168","messageId":"172","endLine":185,"endColumn":8,"fix":"173"},{"ruleId":"141","severity":1,"message":"174","line":195,"column":13,"nodeType":"143","messageId":"144","endLine":195,"endColumn":25},{"ruleId":"141","severity":1,"message":"175","line":195,"column":27,"nodeType":"143","messageId":"144","endLine":195,"endColumn":40},{"ruleId":"152","severity":1,"message":"153","line":214,"column":20,"nodeType":"154","messageId":"155","endLine":215,"endColumn":1,"fix":"176"},{"ruleId":"141","severity":1,"message":"177","line":3,"column":8,"nodeType":"143","messageId":"144","endLine":3,"endColumn":19},{"ruleId":"141","severity":1,"message":"178","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":14},{"ruleId":"141","severity":1,"message":"179","line":8,"column":9,"nodeType":"143","messageId":"144","endLine":8,"endColumn":20},{"ruleId":"162","severity":1,"message":"180","line":12,"column":9,"nodeType":"143","messageId":"164","endLine":12,"endColumn":17,"fix":"181"},{"ruleId":"146","severity":1,"message":"147","line":66,"column":37,"nodeType":"148","messageId":"149","endLine":67,"endColumn":1,"fix":"182"},{"ruleId":"146","severity":1,"message":"147","line":69,"column":43,"nodeType":"148","messageId":"149","endLine":70,"endColumn":1,"fix":"183"},{"ruleId":"146","severity":1,"message":"147","line":73,"column":41,"nodeType":"148","messageId":"149","endLine":74,"endColumn":1,"fix":"184"},{"ruleId":"146","severity":1,"message":"147","line":74,"column":48,"nodeType":"148","messageId":"149","endLine":75,"endColumn":1,"fix":"185"},{"ruleId":"146","severity":1,"message":"147","line":90,"column":68,"nodeType":"148","messageId":"149","endLine":91,"endColumn":1,"fix":"186"},{"ruleId":"146","severity":1,"message":"147","line":95,"column":58,"nodeType":"148","messageId":"149","endLine":96,"endColumn":1,"fix":"187"},{"ruleId":"146","severity":1,"message":"147","line":51,"column":37,"nodeType":"148","messageId":"149","endLine":52,"endColumn":1,"fix":"188"},{"ruleId":"141","severity":1,"message":"174","line":55,"column":13,"nodeType":"143","messageId":"144","endLine":55,"endColumn":25},{"ruleId":"141","severity":1,"message":"189","line":60,"column":13,"nodeType":"143","messageId":"144","endLine":60,"endColumn":21},{"ruleId":"152","severity":1,"message":"153","line":31,"column":26,"nodeType":"190","messageId":"155","endLine":32,"endColumn":1,"fix":"191"},{"ruleId":"146","severity":1,"message":"147","line":39,"column":61,"nodeType":"148","messageId":"149","endLine":40,"endColumn":1,"fix":"192"},{"ruleId":"166","severity":1,"message":"167","line":95,"column":11,"nodeType":"193","messageId":"169","endLine":95,"endColumn":12,"fix":"194"},{"ruleId":"166","severity":1,"message":"171","line":95,"column":61,"nodeType":"193","messageId":"172","endLine":95,"endColumn":62,"fix":"195"},{"ruleId":"166","severity":1,"message":"167","line":112,"column":11,"nodeType":"193","messageId":"169","endLine":112,"endColumn":12,"fix":"196"},{"ruleId":"166","severity":1,"message":"171","line":112,"column":64,"nodeType":"193","messageId":"172","endLine":112,"endColumn":65,"fix":"197"},{"ruleId":"141","severity":1,"message":"198","line":168,"column":13,"nodeType":"143","messageId":"144","endLine":168,"endColumn":18},{"ruleId":"141","severity":1,"message":"198","line":188,"column":7,"nodeType":"143","messageId":"144","endLine":188,"endColumn":12},{"ruleId":"162","severity":1,"message":"199","line":196,"column":9,"nodeType":"143","messageId":"164","endLine":196,"endColumn":25,"fix":"200"},{"ruleId":"166","severity":1,"message":"167","line":12,"column":11,"nodeType":"193","messageId":"169","endLine":12,"endColumn":12,"fix":"201"},{"ruleId":"166","severity":1,"message":"171","line":12,"column":40,"nodeType":"193","messageId":"172","endLine":12,"endColumn":41,"fix":"202"},{"ruleId":"166","severity":1,"message":"167","line":18,"column":11,"nodeType":"193","messageId":"169","endLine":18,"endColumn":12,"fix":"203"},{"ruleId":"166","severity":1,"message":"171","line":18,"column":64,"nodeType":"193","messageId":"172","endLine":18,"endColumn":65,"fix":"204"},{"ruleId":"166","severity":1,"message":"167","line":29,"column":11,"nodeType":"193","messageId":"169","endLine":29,"endColumn":12,"fix":"205"},{"ruleId":"166","severity":1,"message":"171","line":29,"column":64,"nodeType":"193","messageId":"172","endLine":29,"endColumn":65,"fix":"206"},"global-require",[],"lines-around-directive",["207"],"no-spaced-func",["208"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'IndicatorPage' is defined but never used.","Identifier","unusedVar","'e' is defined but never used.","semi","Missing semicolon.","ExpressionStatement","missingSemi",{"range":"209","text":"210"},{"range":"211","text":"210"},"comma-dangle","Missing trailing comma.","Property","missing",{"range":"212","text":"213"},{"range":"214","text":"213"},{"range":"215","text":"213"},"'filePath' is assigned a value but never used.","'invalidStatus' is assigned a value but never used.",{"range":"216","text":"213"},"prefer-const","'invalidPath' is never reassigned. Use 'const' instead.","useConst",{"range":"217","text":"218"},"object-curly-newline","Expected a line break after this opening brace.","ObjectExpression","expectedLinebreakAfterOpeningBrace",{"range":"219","text":"220"},"Expected a line break before this closing brace.","expectedLinebreakBeforeClosingBrace",{"range":"221","text":"220"},"'locationList' is assigned a value but never used.","'indicatorList' is assigned a value but never used.",{"range":"222","text":"213"},"'ProgressBar' is defined but never used.","'Button' is defined but never used.","'ipcRenderer' is assigned a value but never used.","'cbStates' is never reassigned. Use 'const' instead.",{"range":"223","text":"224"},{"range":"225","text":"210"},{"range":"226","text":"210"},{"range":"227","text":"210"},{"range":"228","text":"210"},{"range":"229","text":"210"},{"range":"230","text":"210"},{"range":"231","text":"210"},"'fileName' is assigned a value but never used.","JSXElement",{"range":"232","text":"213"},{"range":"233","text":"210"},"ObjectPattern",{"range":"234","text":"220"},{"range":"235","text":"220"},{"range":"236","text":"220"},{"range":"237","text":"220"},"'level' is assigned a value but never used.","'resetStateButton' is never reassigned. Use 'const' instead.",{"range":"238","text":"239"},{"range":"240","text":"220"},{"range":"241","text":"220"},{"range":"242","text":"220"},{"range":"243","text":"220"},{"range":"244","text":"220"},{"range":"245","text":"220"},"padding-line-between-statements","func-call-spacing",[2238,2238],";",[2473,2473],[913,913],",",[2541,2541],[2887,2887],[4662,4662],[4779,4803],"const invalidPath = false;",[5043,5043],"\n",[5217,5217],[5836,5836],[396,414],"const cbStates = {};",[2029,2029],[2166,2166],[2298,2298],[2347,2347],[2894,2894],[2982,2982],[1407,1407],[952,952],[1141,1141],[2697,2697],[2746,2746],[3135,3135],[3187,3187],[5638,5768],"const resetStateButton = (\n      <Button id=\"ResetStateButton\" onClick={this.handleResetClick}>\n        Reset\n      </Button>\n    );",[253,253],[281,281],[550,550],[602,602],[938,938],[990,990]]