[{"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\index.js":"1","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\App.js":"2","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppFooter.js":"4","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppHeader.js":"5","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppSection.js":"6","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppNav.js":"7","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LoadingPage\\LoadingPage.js":"8","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\LocationPage.js":"9","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\IndicatorPage.js":"10","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\GraphPage\\GraphPage.js":"11","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\ConfirmationPage\\ConfirmationPage.js":"12","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\LocationLevelButtons.js":"13","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectorTable.js":"14","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectionTable.js":"15","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\CheckBoxLabel.js":"16","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\SectionAccordion.js":"17"},{"size":449,"mtime":1616093647498,"results":"18","hashOfConfig":"19"},{"size":1165,"mtime":1614807220991,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1616095002193,"results":"21","hashOfConfig":"19"},{"size":1538,"mtime":1614807223684,"results":"22","hashOfConfig":"19"},{"size":529,"mtime":1614807223692,"results":"23","hashOfConfig":"19"},{"size":4326,"mtime":1616429752797,"results":"24","hashOfConfig":"19"},{"size":606,"mtime":1614807223701,"results":"25","hashOfConfig":"19"},{"size":777,"mtime":1614880675473,"results":"26","hashOfConfig":"19"},{"size":6428,"mtime":1616429985194,"results":"27","hashOfConfig":"19"},{"size":5417,"mtime":1616429724612,"results":"28","hashOfConfig":"19"},{"size":327,"mtime":1614807223806,"results":"29","hashOfConfig":"19"},{"size":1674,"mtime":1615907516188,"results":"30","hashOfConfig":"19"},{"size":1316,"mtime":1614807223889,"results":"31","hashOfConfig":"19"},{"size":5326,"mtime":1616094207361,"results":"32","hashOfConfig":"19"},{"size":2105,"mtime":1616429966650,"results":"33","hashOfConfig":"19"},{"size":940,"mtime":1616094856193,"results":"34","hashOfConfig":"19"},{"size":2192,"mtime":1616429781163,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"19hsamx",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\index.js",[],["72","73","74","75","76","77"],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\App.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppFooter.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppHeader.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppSection.js",["78","79","80"],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppNav.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LoadingPage\\LoadingPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\LocationPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\IndicatorPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\GraphPage\\GraphPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\ConfirmationPage\\ConfirmationPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\LocationLevelButtons.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectorTable.js",["81"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass SelectorTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    // put each state name into the listgroup\n    this.stateList = [];\n    this.secondariesList = [];\n    const { locations } = this.props;\n    let itemID = 0;\n    locations.forEach((location) => {\n      this.stateList.push(\n        <ListGroup.Item\n          action\n          eventKey={itemID}\n          key={itemID}\n          onClick={(e) => this.onStateListClick(e)}\n        >\n          {location.StateName}\n        </ListGroup.Item>,\n      );\n      itemID += 1;\n    });\n\n    this.onSecondariesListClick = this.onSecondariesListClick.bind(this);\n    this.onStateListClick = this.onStateListClick.bind(this);\n    this.buildSelectorTable = this.buildSelectorTable.bind(this);\n  }\n\n  onSecondariesListClick(event) {\n    const { level, setCountyIdx, setPlaceIdx } = this.props;\n\n    const tmpSecondaryIdx = event.target.attributes[0].value;\n    // console.log(tmpSecondaryIdx)\n\n    if (level === \"County\") {\n      setCountyIdx(tmpSecondaryIdx);\n    } else if (level === \"Place\") {\n      setPlaceIdx(tmpSecondaryIdx);\n    }\n  }\n\n  onStateListClick(event) {\n    const tmpStateIdx = event.target.attributes[0].value;\n    const { level, onOpenSecondary, setStateIdx } = this.props;\n\n    // set the stateIdx\n    setStateIdx(tmpStateIdx);\n\n    if (level !== \"State\") {\n      const { locations } = this.props;\n\n      // change the stateList title\n      onOpenSecondary(locations[tmpStateIdx].StateName);\n\n      // create secondaryList\n      this.secondariesList = [];\n      let tmpSecondaries = null;\n      let itemID = 0;\n      if (level === \"County\") {\n        tmpSecondaries = locations[tmpStateIdx].Counties;\n        tmpSecondaries.forEach((secondary) => {\n          this.secondariesList.push(\n            <ListGroup.Item\n              action\n              eventKey={itemID}\n              key={itemID}\n              onClick={(e) => this.onSecondariesListClick(e)}\n            >\n              {secondary.CountyName}\n            </ListGroup.Item>,\n          );\n          itemID += 1;\n        });\n      } else if (level === \"Place\") {\n        tmpSecondaries = locations[tmpStateIdx].Places;\n        tmpSecondaries.forEach((secondary) => {\n          this.secondariesList.push(\n            <ListGroup.Item\n              action\n              eventKey={itemID}\n              key={itemID}\n              onClick={(e) => this.onSecondariesListClick(e)}\n            >\n              {secondary.PlaceName}\n            </ListGroup.Item>,\n          );\n          itemID += 1;\n        });\n      }\n    }\n  }\n\n  buildSelectorTable() {\n    console.log(\"Building selectorTable\");\n\n    const {\n      level,\n      activeCard,\n      primaryTitle,\n      secondaryTitle,\n    } = this.props;\n\n    let secondaryCard = null;\n    if (level !== \"State\") {\n      secondaryCard = (\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as=\"h6\" eventKey=\"1\">\n              {secondaryTitle}\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body id=\"SelectorList\">\n              <ListGroup variant=\"flush\">{this.secondariesList}</ListGroup>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      );\n    }\n\n    return (\n      <Accordion defaultActiveKey={activeCard} activeKey={activeCard}>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as=\"h6\" eventKey=\"0\">\n              {primaryTitle}\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body id=\"SelectorList\">\n              <ListGroup variant=\"flush\">{this.stateList}</ListGroup>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        {secondaryCard}\n      </Accordion>\n    );\n  }\n\n  render() {\n    // build the selectorTable\n    const selectorTable = this.buildSelectorTable();\n\n    return <div id=\"SelectorTable\">{selectorTable}</div>;\n  }\n}\n\nSelectorTable.propTypes = {\n  level: PropTypes.string,\n  // activeList: PropTypes.string,\n  activeCard: PropTypes.string,\n  primaryTitle: PropTypes.string,\n  secondaryTitle: PropTypes.string,\n  onOpenSecondary: PropTypes.func,\n  setStateIdx: PropTypes.func,\n  setCountyIdx: PropTypes.func,\n  setPlaceIdx: PropTypes.func,\n  locations: PropTypes.arrayOf(\n    PropTypes.shape({\n      StateName: PropTypes.string,\n      StateID: PropTypes.string,\n      Counties: PropTypes.arrayOf(\n        PropTypes.shape({\n          CountyName: PropTypes.string,\n          CountyID: PropTypes.string,\n        }),\n      ),\n      Places: PropTypes.arrayOf(\n        PropTypes.shape({\n          PlaceName: PropTypes.string,\n          PlaceID: PropTypes.string,\n        }),\n      ),\n    }),\n  ),\n};\nSelectorTable.defaultProps = {\n  level: \"State\",\n  // activeList: '0',\n  activeCard: \"0\",\n  primaryTitle: \"Select a state\",\n  secondaryTitle: \"Select a state above\",\n  onOpenSecondary: null,\n  setStateIdx: null,\n  setCountyIdx: null,\n  setPlaceIdx: null,\n  locations: null,\n};\n\nexport default SelectorTable;\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectionTable.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\CheckBoxLabel.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\SectionAccordion.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":27,"column":13,"nodeType":"96","messageId":"97","endLine":27,"endColumn":25},{"ruleId":"94","severity":1,"message":"98","line":98,"column":13,"nodeType":"96","messageId":"97","endLine":98,"endColumn":25},{"ruleId":"94","severity":1,"message":"99","line":98,"column":27,"nodeType":"96","messageId":"97","endLine":98,"endColumn":40},{"ruleId":"94","severity":1,"message":"100","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":14},"global-require",[],"lines-around-directive",["101"],"no-spaced-func",["102"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'onPageChange' is assigned a value but never used.","Identifier","unusedVar","'locationList' is assigned a value but never used.","'indicatorList' is assigned a value but never used.","'Button' is defined but never used.","padding-line-between-statements","func-call-spacing"]