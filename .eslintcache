[{"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\index.js":"1","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\App.js":"2","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppFooter.js":"4","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppHeader.js":"5","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppSection.js":"6","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppNav.js":"7","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LoadingPage\\LoadingPage.js":"8","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\LocationPage.js":"9","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\IndicatorPage.js":"10","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\GraphPage\\GraphPage.js":"11","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\ConfirmationPage\\ConfirmationPage.js":"12","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\LocationLevelButtons.js":"13","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectorTable.js":"14","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectionTable.js":"15","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\CheckBoxLabel.js":"16","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\SectionAccordion.js":"17"},{"size":449,"mtime":1616093647498,"results":"18","hashOfConfig":"19"},{"size":1165,"mtime":1614807220991,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1616095002193,"results":"21","hashOfConfig":"19"},{"size":1538,"mtime":1614807223684,"results":"22","hashOfConfig":"19"},{"size":529,"mtime":1614807223692,"results":"23","hashOfConfig":"19"},{"size":4348,"mtime":1616451373279,"results":"24","hashOfConfig":"19"},{"size":606,"mtime":1614807223701,"results":"25","hashOfConfig":"19"},{"size":777,"mtime":1614880675473,"results":"26","hashOfConfig":"19"},{"size":6426,"mtime":1616439310913,"results":"27","hashOfConfig":"19"},{"size":4406,"mtime":1616516471827,"results":"28","hashOfConfig":"19"},{"size":327,"mtime":1614807223806,"results":"29","hashOfConfig":"19"},{"size":1674,"mtime":1616439398782,"results":"30","hashOfConfig":"19"},{"size":1316,"mtime":1614807223889,"results":"31","hashOfConfig":"19"},{"size":5326,"mtime":1616094207361,"results":"32","hashOfConfig":"19"},{"size":2105,"mtime":1616429966650,"results":"33","hashOfConfig":"19"},{"size":890,"mtime":1616446410454,"results":"34","hashOfConfig":"19"},{"size":3601,"mtime":1616515975394,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"19hsamx",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":7,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":null},"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\index.js",[],["74","75","76","77","78","79"],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\App.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppFooter.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppHeader.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppSection.js",["80","81","82"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport LocationPage from \"./pages/LocationPage/LocationPage\";\r\nimport IndicatorPage from \"./pages/IndicatorPage/IndicatorPage\";\r\nimport ConfirmationPage from \"./pages/ConfirmationPage/ConfirmationPage\";\r\nimport LoadingPage from \"./pages/LoadingPage/LoadingPage\";\r\nimport GraphPage from \"./pages/GraphPage/GraphPage\";\r\n\r\n// const electron = window.require(\"electron\");\r\n// const { ipcRenderer } = electron;\r\n\r\nclass AppSection extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      locationList: [],\r\n      indicatorList: [],\r\n      progress: 0,\r\n    };\r\n\r\n    this.addLocation = this.addLocation.bind(this);\r\n    this.removeLocation = this.removeLocation.bind(this);\r\n    this.addIndicator = this.addIndicator.bind(this);\r\n    this.removeIndicator = this.removeIndicator.bind(this);\r\n    this.startPythonScript = this.startPythonScript.bind(this);\r\n\r\n    const { onPageChange } = this.props;\r\n\r\n    // ipcRenderer.on(\"MESSAGE_FROM_BACKGROUND_VIA_MAIN\", (event, args) => {\r\n    //   console.log(args);\r\n    //   const newProgress = parseFloat(args) * 100;\r\n    //   console.log(newProgress);\r\n    //   this.setState({ progress: newProgress });\r\n    //   if (newProgress >= 100) {\r\n    //     onPageChange(1);\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  addLocation(locationName, geographicLevel, primaryID, secondaryID) {\r\n    const { locationList } = this.state;\r\n    const idx = locationList.findIndex(\r\n      (i) => (\r\n        i.geographicLevel === geographicLevel\r\n        && i.primaryID === primaryID\r\n        && i.secondaryID === secondaryID\r\n      ),\r\n    );\r\n    if (idx === -1) {\r\n      locationList.push({\r\n        locationName,\r\n        geographicLevel,\r\n        primaryID,\r\n        secondaryID,\r\n      });\r\n      this.setState({ locationList });\r\n    }\r\n  }\r\n\r\n  removeLocation(locationIdx) {\r\n    const { locationList } = this.state;\r\n\r\n    if (locationList.length > locationIdx) {\r\n      locationList.splice(locationIdx, 1);\r\n      this.setState({ locationList });\r\n    }\r\n  }\r\n\r\n  addIndicator(sectionIdx, tableIdx, tableName) {\r\n    const { indicatorList } = this.state;\r\n    const idx = indicatorList.findIndex(\r\n      (i) => i.sectionIdx === sectionIdx && i.tableIdx === tableIdx,\r\n    );\r\n    if (idx === -1) {\r\n      indicatorList.push({ tableName, sectionIdx, tableIdx });\r\n      this.setState({ indicatorList });\r\n    } else {\r\n      console.log(\"tried to add an indicator twice\");\r\n    }\r\n\r\n    console.log(indicatorList);\r\n  }\r\n\r\n  removeIndicator(sectionIdx, tableIdx) {\r\n    const { indicatorList } = this.state;\r\n    const idx = indicatorList.findIndex(\r\n      (i) => i.sectionIdx === sectionIdx && i.tableIdx === tableIdx,\r\n    );\r\n    if (idx !== -1) {\r\n      indicatorList.splice(idx, 1);\r\n      this.setState({ indicatorList });\r\n    }\r\n\r\n    console.log(indicatorList);\r\n  }\r\n\r\n  startPythonScript() {\r\n    const { locationList, indicatorList } = this.state;\r\n\r\n    // ipcRenderer.send(\"START_BACKGROUND_VIA_MAIN\", {\r\n    //   reportArea: locationList,\r\n    //   selectedIndicators: indicatorList,\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    const { page } = this.props;\r\n    const { locationList, indicatorList, progress } = this.state;\r\n\r\n    let section;\r\n    if (page === 0) {\r\n      section = (\r\n        <LocationPage\r\n          locationList={locationList}\r\n          onAddLocation={this.addLocation}\r\n          onRemoveLocation={this.removeLocation}\r\n        />\r\n      );\r\n    } else if (page === 1) {\r\n      section = (\r\n        <IndicatorPage\r\n          indicatorList={indicatorList}\r\n          onAddIndicator={this.addIndicator}\r\n          onRemoveIndicator={this.removeIndicator}\r\n        />\r\n      );\r\n    } else if (page === 2) {\r\n      section = (\r\n        <ConfirmationPage\r\n          locationList={locationList}\r\n          indicatorList={indicatorList}\r\n        />\r\n      );\r\n    } else if (page === 3) {\r\n      section = (\r\n        <LoadingPage progress={progress} onPageMount={this.startPythonScript} />\r\n      );\r\n    } else if (page === 4) {\r\n      section = <GraphPage />;\r\n    }\r\n    return <>{section}</>;\r\n  }\r\n}\r\n\r\nAppSection.propTypes = {\r\n  page: PropTypes.number,\r\n  onPageChange: PropTypes.func,\r\n};\r\nAppSection.defaultProps = {\r\n  page: 0,\r\n  onPageChange: null,\r\n};\r\n\r\nexport default AppSection;\r\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\AppNav.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LoadingPage\\LoadingPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\LocationPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\IndicatorPage.js",["83","84","85","86","87","88","89","90"],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\GraphPage\\GraphPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\ConfirmationPage\\ConfirmationPage.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\LocationLevelButtons.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectorTable.js",["91"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass SelectorTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    // put each state name into the listgroup\n    this.stateList = [];\n    this.secondariesList = [];\n    const { locations } = this.props;\n    let itemID = 0;\n    locations.forEach((location) => {\n      this.stateList.push(\n        <ListGroup.Item\n          action\n          eventKey={itemID}\n          key={itemID}\n          onClick={(e) => this.onStateListClick(e)}\n        >\n          {location.StateName}\n        </ListGroup.Item>,\n      );\n      itemID += 1;\n    });\n\n    this.onSecondariesListClick = this.onSecondariesListClick.bind(this);\n    this.onStateListClick = this.onStateListClick.bind(this);\n    this.buildSelectorTable = this.buildSelectorTable.bind(this);\n  }\n\n  onSecondariesListClick(event) {\n    const { level, setCountyIdx, setPlaceIdx } = this.props;\n\n    const tmpSecondaryIdx = event.target.attributes[0].value;\n    // console.log(tmpSecondaryIdx)\n\n    if (level === \"County\") {\n      setCountyIdx(tmpSecondaryIdx);\n    } else if (level === \"Place\") {\n      setPlaceIdx(tmpSecondaryIdx);\n    }\n  }\n\n  onStateListClick(event) {\n    const tmpStateIdx = event.target.attributes[0].value;\n    const { level, onOpenSecondary, setStateIdx } = this.props;\n\n    // set the stateIdx\n    setStateIdx(tmpStateIdx);\n\n    if (level !== \"State\") {\n      const { locations } = this.props;\n\n      // change the stateList title\n      onOpenSecondary(locations[tmpStateIdx].StateName);\n\n      // create secondaryList\n      this.secondariesList = [];\n      let tmpSecondaries = null;\n      let itemID = 0;\n      if (level === \"County\") {\n        tmpSecondaries = locations[tmpStateIdx].Counties;\n        tmpSecondaries.forEach((secondary) => {\n          this.secondariesList.push(\n            <ListGroup.Item\n              action\n              eventKey={itemID}\n              key={itemID}\n              onClick={(e) => this.onSecondariesListClick(e)}\n            >\n              {secondary.CountyName}\n            </ListGroup.Item>,\n          );\n          itemID += 1;\n        });\n      } else if (level === \"Place\") {\n        tmpSecondaries = locations[tmpStateIdx].Places;\n        tmpSecondaries.forEach((secondary) => {\n          this.secondariesList.push(\n            <ListGroup.Item\n              action\n              eventKey={itemID}\n              key={itemID}\n              onClick={(e) => this.onSecondariesListClick(e)}\n            >\n              {secondary.PlaceName}\n            </ListGroup.Item>,\n          );\n          itemID += 1;\n        });\n      }\n    }\n  }\n\n  buildSelectorTable() {\n    console.log(\"Building selectorTable\");\n\n    const {\n      level,\n      activeCard,\n      primaryTitle,\n      secondaryTitle,\n    } = this.props;\n\n    let secondaryCard = null;\n    if (level !== \"State\") {\n      secondaryCard = (\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as=\"h6\" eventKey=\"1\">\n              {secondaryTitle}\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"1\">\n            <Card.Body id=\"SelectorList\">\n              <ListGroup variant=\"flush\">{this.secondariesList}</ListGroup>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      );\n    }\n\n    return (\n      <Accordion defaultActiveKey={activeCard} activeKey={activeCard}>\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as=\"h6\" eventKey=\"0\">\n              {primaryTitle}\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body id=\"SelectorList\">\n              <ListGroup variant=\"flush\">{this.stateList}</ListGroup>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n        {secondaryCard}\n      </Accordion>\n    );\n  }\n\n  render() {\n    // build the selectorTable\n    const selectorTable = this.buildSelectorTable();\n\n    return <div id=\"SelectorTable\">{selectorTable}</div>;\n  }\n}\n\nSelectorTable.propTypes = {\n  level: PropTypes.string,\n  // activeList: PropTypes.string,\n  activeCard: PropTypes.string,\n  primaryTitle: PropTypes.string,\n  secondaryTitle: PropTypes.string,\n  onOpenSecondary: PropTypes.func,\n  setStateIdx: PropTypes.func,\n  setCountyIdx: PropTypes.func,\n  setPlaceIdx: PropTypes.func,\n  locations: PropTypes.arrayOf(\n    PropTypes.shape({\n      StateName: PropTypes.string,\n      StateID: PropTypes.string,\n      Counties: PropTypes.arrayOf(\n        PropTypes.shape({\n          CountyName: PropTypes.string,\n          CountyID: PropTypes.string,\n        }),\n      ),\n      Places: PropTypes.arrayOf(\n        PropTypes.shape({\n          PlaceName: PropTypes.string,\n          PlaceID: PropTypes.string,\n        }),\n      ),\n    }),\n  ),\n};\nSelectorTable.defaultProps = {\n  level: \"State\",\n  // activeList: '0',\n  activeCard: \"0\",\n  primaryTitle: \"Select a state\",\n  secondaryTitle: \"Select a state above\",\n  onOpenSecondary: null,\n  setStateIdx: null,\n  setCountyIdx: null,\n  setPlaceIdx: null,\n  locations: null,\n};\n\nexport default SelectorTable;\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\LocationPage\\subcomponents\\SelectionTable.js",[],"C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\CheckBoxLabel.js",["92","93"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../../../css/IndicatorPage.css\";\r\n\r\nclass CheckBoxLabel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const { id, name, checked, onClick } = this.props;\r\n\r\n    return (\r\n      <>\r\n        <label htmlFor={id}>\r\n          <input\r\n            type=\"checkbox\"\r\n            name={name}\r\n            id={id}\r\n            checked={checked}\r\n            onChange={(e) => onClick(e)}\r\n          />\r\n          {name}\r\n        </label>\r\n        <br />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCheckBoxLabel.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  checked: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\nCheckBoxLabel.defaultProps = {\r\n  id: null,\r\n  name: null,\r\n  checked: false,\r\n  onClick: null,\r\n};\r\n\r\nexport default CheckBoxLabel;\r\n","C:\\Users\\User\\Documents\\HLG\\c2x\\Census2Xlsx\\src\\components\\pages\\IndicatorPage\\subcomponents\\SectionAccordion.js",["94","95","96","97"],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":27,"column":13,"nodeType":"112","messageId":"113","endLine":27,"endColumn":25},{"ruleId":"110","severity":1,"message":"114","line":98,"column":13,"nodeType":"112","messageId":"113","endLine":98,"endColumn":25},{"ruleId":"110","severity":1,"message":"115","line":98,"column":27,"nodeType":"112","messageId":"113","endLine":98,"endColumn":40},{"ruleId":"116","severity":1,"message":"117","line":12,"column":9,"nodeType":"112","messageId":"118","endLine":12,"endColumn":17,"fix":"119"},{"ruleId":"110","severity":1,"message":"115","line":34,"column":13,"nodeType":"112","messageId":"113","endLine":34,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":64,"column":37,"nodeType":"122","messageId":"123","endLine":65,"endColumn":1,"fix":"124"},{"ruleId":"120","severity":1,"message":"121","line":67,"column":43,"nodeType":"122","messageId":"123","endLine":68,"endColumn":1,"fix":"125"},{"ruleId":"120","severity":1,"message":"121","line":82,"column":41,"nodeType":"122","messageId":"123","endLine":83,"endColumn":1,"fix":"126"},{"ruleId":"120","severity":1,"message":"121","line":83,"column":48,"nodeType":"122","messageId":"123","endLine":84,"endColumn":1,"fix":"127"},{"ruleId":"120","severity":1,"message":"121","line":98,"column":68,"nodeType":"122","messageId":"123","endLine":99,"endColumn":1,"fix":"128"},{"ruleId":"120","severity":1,"message":"121","line":103,"column":58,"nodeType":"122","messageId":"123","endLine":104,"endColumn":1,"fix":"129"},{"ruleId":"110","severity":1,"message":"130","line":5,"column":8,"nodeType":"112","messageId":"113","endLine":5,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":12,"column":11,"nodeType":"133","messageId":"134","endLine":12,"endColumn":12,"fix":"135"},{"ruleId":"131","severity":1,"message":"136","line":12,"column":40,"nodeType":"133","messageId":"137","endLine":12,"endColumn":41,"fix":"138"},{"ruleId":"131","severity":1,"message":"132","line":18,"column":11,"nodeType":"133","messageId":"134","endLine":18,"endColumn":12,"fix":"139"},{"ruleId":"131","severity":1,"message":"136","line":18,"column":64,"nodeType":"133","messageId":"137","endLine":18,"endColumn":65,"fix":"140"},{"ruleId":"131","severity":1,"message":"132","line":29,"column":11,"nodeType":"133","messageId":"134","endLine":29,"endColumn":12,"fix":"141"},{"ruleId":"131","severity":1,"message":"136","line":29,"column":64,"nodeType":"133","messageId":"137","endLine":29,"endColumn":65,"fix":"142"},"global-require",[],"lines-around-directive",["143"],"no-spaced-func",["144"],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'onPageChange' is assigned a value but never used.","Identifier","unusedVar","'locationList' is assigned a value but never used.","'indicatorList' is assigned a value but never used.","prefer-const","'cbStates' is never reassigned. Use 'const' instead.","useConst",{"range":"145","text":"146"},"semi","Missing semicolon.","ExpressionStatement","missingSemi",{"range":"147","text":"148"},{"range":"149","text":"148"},{"range":"150","text":"148"},{"range":"151","text":"148"},{"range":"152","text":"148"},{"range":"153","text":"148"},"'Button' is defined but never used.","object-curly-newline","Expected a line break after this opening brace.","ObjectPattern","expectedLinebreakAfterOpeningBrace",{"range":"154","text":"155"},"Expected a line break before this closing brace.","expectedLinebreakBeforeClosingBrace",{"range":"156","text":"155"},{"range":"157","text":"155"},{"range":"158","text":"155"},{"range":"159","text":"155"},{"range":"160","text":"155"},"padding-line-between-statements","func-call-spacing",[396,414],"const cbStates = {};",[2017,2017],";",[2154,2154],[2599,2599],[2648,2648],[3169,3169],[3257,3257],[253,253],"\n",[281,281],[550,550],[602,602],[938,938],[990,990]]